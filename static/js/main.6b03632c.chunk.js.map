{"version":3,"sources":["components/Filter/Filter.module.css","components/Title/Title.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Title/Title.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Title","title","className","styles","defaultProps","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","trim","alert","reset","props","onSubmit","this","form","formField","formLabel","formInput","type","placeholder","onChange","btnSubmit","Component","ContactList","contacts","onDeleteContact","list","map","id","item","divider","tel","btnDelete","onClick","Filter","valueFilter","onChangeFilter","labelFilter","inputFilter","App","filter","addContact","data","find","contact","newContactDate","shortid","generate","prevState","changeFilter","getFilteredByName","normalizedFilter","toLowerCase","includes","deleteContact","contactId","savedContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","filteredContactByName","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b03632c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelFilter\":\"Filter_labelFilter__3g0oF\",\"inputFilter\":\"Filter_inputFilter__1tp74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1GtbF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3fjXf\",\"formField\":\"ContactForm_formField__2X3gy\",\"formLabel\":\"ContactForm_formLabel__1G55B\",\"formInput\":\"ContactForm_formInput__1Bgu5\",\"btnSubmit\":\"ContactForm_btnSubmit__1fyfv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Go7_\",\"item\":\"ContactList_item__2U7TZ\",\"divider\":\"ContactList_divider__Bg_Uq\",\"tel\":\"ContactList_tel__eTQE9\",\"btnDelete\":\"ContactList_btnDelete__1-hc4\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Title.module.css';\r\n\r\nconst Title = ({ title }) => {\r\n  return <h2 className={styles.title}>{title}</h2>;\r\n};\r\n\r\nTitle.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Title;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static defaultProps = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    // console.log(event.currentTarget.name);\r\n    // console.log(event.currentTarget.value);\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    if (this.state.name.trim() === '' || this.state.number.trim() === '') {\r\n      alert('Please enter valid information!');\r\n      this.reset();\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <div className={styles.formField}>\r\n          <label className={styles.formLabel}>\r\n            Name\r\n            <input\r\n              className={styles.formInput}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.formField}>\r\n          <label className={styles.formLabel}>\r\n            Number\r\n            <input\r\n              className={styles.formInput}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              placeholder=\"Enter phone\"\r\n              value={number}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <button type=\"submit\" className={styles.btnSubmit}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ol className={styles.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={styles.item} >\r\n      <p>\r\n        {name}\r\n        <span className={styles.divider}>:</span>\r\n        <span className={styles.tel}>{number}</span>\r\n      </p>\r\n      <button type=\"button\" className={styles.btnDelete} onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n    ))}\r\n  </ol>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ valueFilter, onChangeFilter }) => (\r\n  <>\r\n    <label className={styles.labelFilter}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.inputFilter}\r\n        type=\"text\"\r\n        value={valueFilter}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </label>\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  valueFilter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","//Libs\nimport { Component } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\n//Components\nimport Title from './components/Title';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  static defaultProps = {\n    contacts: [],\n    filter: '',\n  };\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    filter: PropTypes.string,\n  };\n\n  //метод для добавления данных в разметку при получении данных с component ContactForm в Арр\n  addContact = data => {\n    // console.log(data.name);\n    const findName = this.state.contacts.find(\n      contact => contact.name === data.name,\n    );\n\n    if (findName) {\n      alert(`${data.name} is already in contacts!`);\n      return;\n    }\n\n    const newContactDate = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n    // console.log(newContactDate);\n\n    this.setState(prevState => ({\n      contacts: [newContactDate, ...prevState.contacts],\n    }));\n  };\n\n  //метод для изменения данных в state по вводу в фильтр\n  changeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  //метод для фильтрации массива по имени\n  getFilteredByName = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  //метод для удаления контакта по кнопке Удалить\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    //получаем данные с LS при создании компонента\n    const savedContacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(savedContacts);\n\n    // делаем проверку на null и перезаписываем state\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts,\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    // console.log('Текущее состояние ', prevState);\n    // console.log('Начальное состояние ', this.state);\n\n    //делаем проверку на неравенство данных перед сохранением в LS\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state; // деструкт свойств обекта state\n\n    const filteredContactByName = this.getFilteredByName();\n\n    return (\n      <div className=\"container\">\n        <Title title={'Phonebook'} />\n        <ContactForm onSubmit={this.addContact} />\n\n        <div className=\"container\">\n          {contacts.length > 0 && (\n            <>\n              <Title title={'Contacts'} />\n              <Filter valueFilter={filter} onChangeFilter={this.changeFilter} />\n              <ContactList\n                contacts={filteredContactByName}\n                onDeleteContact={this.deleteContact}\n              />\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}